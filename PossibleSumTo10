
//solution 1
int findNumberofSumAddToTenSol1(int a, int b){
	int n = 10;
	int result = 0;
	if(a+b < n){
		return 0;
	}
	for(int i = a; i > 0; i--){
		if(i+b >= n && i < n){
			result++;
		}
	}
	return result;
}

//solution 2
int findNumberofSumAddToTenSol2(int a, int b){
	int n = 10;
	int result = 0;
	int sum = a+b;
	if(a+b < n){
		return 0;
	}
	result = sum-n+1;  
	
	if(result > n){
		result = n-1;
	}
	return result;
}

int main(){
	int result;
	result = findNumberofSumAddToTenSol1(1，2);
	cout<< "sol1 result:" << result << endl;
	result = findNumberofSumAddToTenSol2(1，2);
	cout<< "sol2 result:" << result << endl;

	result = findNumberofSumAddToTenSol1(5，5);
	cout<< "sol1 result:" << result << endl;
	result = findNumberofSumAddToTenSol2(5，5);
	cout<< "sol2 result:" << result << endl;

	result = findNumberofSumAddToTenSol1(20，2);
	cout<< "sol1 result:" << result << endl;
	result = findNumberofSumAddToTenSol2(20，2);
	cout<< "sol2 result:" << result << endl;

	result = findNumberofSumAddToTenSol1(3，20);
	cout<< "sol1 result:" << result << endl;
	result = findNumberofSumAddToTenSol2(3，20);
	cout<< "sol2 result:" << result << endl;

	result = findNumberofSumAddToTenSol1(30，30);
	cout<< "sol1 result:" << result << endl;
	result = findNumberofSumAddToTenSol2(30，30);
	cout<< "sol2 result:" << result << endl;

	result = findNumberofSumAddToTenSol1(5，8);
	cout<< "sol1 result:" << result << endl;
	result = findNumberofSumAddToTenSol2(5，8);
	cout<< "sol2 result:" << result << endl;

	result = findNumberofSumAddToTenSol1(8，4);
	cout<< "sol1 result:" << result << endl;
	result = findNumberofSumAddToTenSol2(8，4);
	cout<< "sol2 result:" << result << endl;

	result = findNumberofSumAddToTenSol1(6，5);
	cout<< "sol1 result:" << result << endl;
	result = findNumberofSumAddToTenSol2(6，5);
	cout<< "sol2 result:" << result << endl;


}

//5, 5 = 1
//5,6 = 2

//7,7    7,3; 6,4; 5,5; 3,7; 4,6;
//3,4,5,6,7 14-10+1

//3,8    3,7; 2,8

//10, 10 (1,2,3,4,5,6,7,8,9) (9,8,7,6,5,4,3,2,1)
//10,9 (1,2,3,4,5,6,7,8,9) (9,8,7,6,5,4,3,2,1)
//11,11 



